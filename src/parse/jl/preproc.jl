function preproc()
    precompile(Parser, (String,))
    precompile(Parser, (String, Int))
    precompile(next, (Parser,))
    precompile(parse_doc, (Parser,))
    precompile(Expr, (Exp2,))
    precompile(parse_str_or_cmd, (Parser, Bool))

    # precompile(setbinding!, (Exp2,))
    # precompile(setbinding!, (Exp2, Exp2))
    # precompile(Binding, (Exp2,))
    # precompile(Binding, (String, Exp2, Nothing, Vector{Any}, Nothing))
    # precompile(Scope, (Nothing, Dict{String,Binding}, Nothing, Bool))
    # precompile(Scope, (Scope, Dict{String,Binding}, Nothing, Bool))
    # precompile(Scope, (Nothing, Dict{String,Binding}, Dict{String,Any}, Bool))
    # precompile(Scope, (Scope, Dict{String,Binding}, Dict{String,Any}, Bool))
    # precompile(Scope, ())
    precompile(Exp2, (Head, Nothing, Int, Int, Nothing, Kind, Bool, Nothing, Nothing, Nothing, Nothing))
    precompile(Exp2, (Head, Vector{Exp2}, Int, Int, Nothing, Kind, Bool, Nothing, Nothing, Nothing, Nothing))
    precompile(Exp2, (Head, Vector{Exp2}, Int, Int, String, Kind, Bool, Nothing, Nothing, Nothing, Nothing))
    precompile(Exp2, (Head, Vector{Exp2}, Int, Int))
    precompile(Exp2, (Head, Vector{Exp2}))

    precompile(make_id, (Parser,))
    precompile(make_punct, (Parser,))
    precompile(make_punct, (Kind, Int, Int))
    precompile(make_kw, (Parser,))
    precompile(make_kw, (Kind, Int, Int))
    precompile(make_op, (Parser,))
    precompile(make_op, (Kind, Int, Int, Bool))
    precompile(make_lit, (Parser,))
    precompile(make_lit, (Int, Int, String, Kind))
    precompile(make_one, (Parser,))

    precompile(tostr, (IOBuffer,))
    precompile(str_value, (Exp2,))

    precompile(JLParse.parse_expr, (Parser,))
    precompile(JLParse.parse_paren, (Parser,))
    precompile(JLParse.parse_combo, (Parser, Exp2))
    precompile(JLParse.parse_op, (Parser, Exp2, Exp2))
    precompile(parse_uny, (Parser, Exp2))
    precompile(parse_colon, (Parser, Exp2))
    precompile(parse_anon, (Parser, Exp2, Exp2))
    precompile(parse_colon, (Parser, Exp2, Exp2))
    precompile(parse_cond, (Parser, Exp2, Exp2))
    precompile(parse_dot, (Parser, Exp2, Exp2))
    precompile(parse_eq, (Parser, Exp2, Exp2))
    precompile(parse_power, (Parser, Exp2, Exp2))
    precompile(parse_where, (Parser, Exp2, Exp2))

    precompile(JLParse.parse_block, (Parser, Vector{Exp2}))
    precompile(JLParse.parse_block, (Parser, Vector{Exp2}, Tuple{Kind}))
    precompile(JLParse.parse_block, (Parser, Vector{Exp2}, Tuple{Kind,Bool}))
    precompile(JLParse.parse_iter, (Parser,))
    precompile(JLParse.parse_iters, (Parser, Bool))
    precompile(JLParse.parse_call, (Parser, Exp2, Bool))
    precompile(JLParse.parse_comma, (Parser, Vector{Exp2}, Bool, Bool, Bool))
    precompile(JLParse.parse_params, (Parser, Vector{Exp2}, Vector{Exp2}))
    precompile(JLParse.parse_macro, (Parser,))
    precompile(JLParse.parse_generator, (Parser, Exp2))
    precompile(JLParse.parse_dot, (Parser, Bool))

    precompile(JLParse.parse_tuple, (Parser, Exp2))
    precompile(JLParse.parse_array, (Parser, Bool))
    precompile(JLParse.parse_ref, (Parser, Exp2))
    precompile(JLParse.parse_curly, (Parser, Exp2))
    precompile(JLParse.parse_braces, (Parser,))

    precompile(JLParse.parse_kw, (Parser,))
    precompile(JLParse.parse_const, (Parser,))
    precompile(JLParse.parse_global, (Parser,))
    precompile(JLParse.parse_local, (Parser,))
    precompile(JLParse.parse_return, (Parser,))
    precompile(JLParse.parse_abstract, (Parser,))
    precompile(JLParse.parse_primitive, (Parser,))
    precompile(JLParse.parse_import, (Parser,))
    precompile(JLParse.parse_export, (Parser,))
    precompile(JLParse.parse_block_expr, (Parser, JLParse.Head))
    precompile(JLParse.parse_if, (Parser, Bool))
    precompile(JLParse.parse_try, (Parser,))
    precompile(JLParse.parse_do, (Parser, Exp2))
    precompile(JLParse.parse_mutable, (Parser,))

    precompile(JLParse.is_nested, (Parser,))
    precompile(JLParse.from_saved!, (Nest, Saved))
    precompile(JLParse.to_blank!, (Nest,))

    precompile(Scan.Scanner, (IOBuffer, Type{Scan.RawTok}))
    precompile(Scan.next_token, (Scan.Scanner{IOBuffer,Scan.RawTok},))
    precompile(get, (Dict{Char,Kind}, Char, Kind))
    precompile(getindex, (Dict{Kind,Symbol}, Kind))

    precompile(Scan.next_token, (Scan.Scanner{IOBuffer,Scan.RawTok},))
    precompile(Scan.after_amper, (Scan.Scanner{IOBuffer,Scan.RawTok},))
    precompile(Scan.after_backslash, (Scan.Scanner{IOBuffer,Scan.RawTok},))
    precompile(Scan.after_bar, (Scan.Scanner{IOBuffer,Scan.RawTok},))
    precompile(Scan.after_circumflex, (Scan.Scanner{IOBuffer,Scan.RawTok},))
    precompile(Scan.after_cmd, (Scan.Scanner{IOBuffer,Scan.RawTok},))
    precompile(Scan.after_colon, (Scan.Scanner{IOBuffer,Scan.RawTok},))
    precompile(Scan.after_comment, (Scan.Scanner{IOBuffer,Scan.RawTok},))
    precompile(Scan.after_digit, (Scan.Scanner{IOBuffer,Scan.RawTok}, Kind))
    precompile(Scan.after_div, (Scan.Scanner{IOBuffer,Scan.RawTok},))
    precompile(Scan.after_dollar, (Scan.Scanner{IOBuffer,Scan.RawTok},))
    precompile(Scan.after_dot, (Scan.Scanner{IOBuffer,Scan.RawTok},))
    precompile(Scan.after_equal, (Scan.Scanner{IOBuffer,Scan.RawTok},))
    precompile(Scan.after_exclaim, (Scan.Scanner{IOBuffer,Scan.RawTok},))
    precompile(Scan.after_forwardslash, (Scan.Scanner{IOBuffer,Scan.RawTok},))
    precompile(Scan.after_greater, (Scan.Scanner{IOBuffer,Scan.RawTok},))
    precompile(Scan.after_identifier, (Scan.Scanner{IOBuffer,Scan.RawTok}, Char))
    precompile(Scan.after_less, (Scan.Scanner{IOBuffer,Scan.RawTok},))
    precompile(Scan.after_minus, (Scan.Scanner{IOBuffer,Scan.RawTok},))
    precompile(Scan.after_percent, (Scan.Scanner{IOBuffer,Scan.RawTok},))
    precompile(Scan.after_plus, (Scan.Scanner{IOBuffer,Scan.RawTok},))
    precompile(Scan.after_prime, (Scan.Scanner{IOBuffer,Scan.RawTok},))
    precompile(Scan.after_quote, (Scan.Scanner{IOBuffer,Scan.RawTok},))
    precompile(Scan.after_star, (Scan.Scanner{IOBuffer,Scan.RawTok},))
    precompile(Scan.after_ws, (Scan.Scanner{IOBuffer,Scan.RawTok},))
    precompile(Scan.after_xor, (Scan.Scanner{IOBuffer,Scan.RawTok},))
end