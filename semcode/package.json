{
  "name": "semcode",
  "displayName": "SemCode",
  "description": "Sem Code",
  "author": "quantapix <quantapix@gmail.com>",
  "license": "MIT",
  "version": "0.0.1",
  "publisher": "quantapix",
  "repository": {
    "type": "git",
    "url": "https://github.com/quantapix/SemPats.jl"
  },
  "engines": {
    "vscode": "^1.54.0"
  },
  "categories": [
    "Programming Languages"
  ],
  "keywords": [
    "multi-root ready"
  ],
  "activationEvents": [
    "onLanguage:plaintext",
    "onLanguage:html1",
    "onCommand:semcode2.helloWorld"
  ],
  "main": "./client/out/extension",
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "SemCode configuration",
      "properties": {
        "semcode.enable": {
          "scope": "resource",
          "type": "boolean",
          "default": true,
          "description": "Controls the enablement."
        },
        "semcode.options": {
          "scope": "resource",
          "type": "object",
          "default": {},
          "description": "Additional options."
        },
        "semcode.maxNumberOfProblems": {
          "scope": "resource",
          "type": "number",
          "default": 100,
          "description": "Controls the maximum number of problems produced by the server."
        },
        "semcode.trace.server": {
          "scope": "window",
          "type": "string",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "default": "off",
          "description": "Traces communication between client and server"
        }
      }
    },
    "commands": [
      {
        "command": "semcode.helloWorld",
        "title": "Hello World"
      }
    ],
    "languages": [
      {
        "id": "html1",
        "extensions": [
          ".html1"
        ]
      },
      {
        "id": "julia",
        "aliases": [
          "Julia",
          "julia"
        ],
        "extensions": [
          ".jl"
        ],
        "firstLine": "^#!\\s*/.*\\bjulia[0-9.-]*\\b",
        "configuration": "./language-configuration.json"
      },
      {
        "id": "juliamarkdown",
        "aliases": [
          "Julia Markdown",
          "juliamarkdown"
        ],
        "extensions": [
          ".jmd"
        ]
      }
    ],
    "grammars": [
      {
        "language": "html1",
        "scopeName": "text.html1.basic",
        "path": "./syntaxes/html1.tmLanguage.json"
      },
      {
        "language": "julia",
        "scopeName": "source.julia",
        "path": "./syntaxes/julia.tmLanguage.json",
        "embeddedLanguages": {
          "meta.embedded.inline.cpp": "cpp",
          "meta.embedded.inline.javascript": "javascript",
          "meta.embedded.inline.python": "python",
          "meta.embedded.inline.r": "r",
          "meta.embedded.inline.sql": "sql"
        }
      }
    ],
    "themes": [
      {
        "label": "SemCode",
        "uiTheme": "vs-dark",
        "path": "./themes/SemCode-theme.json"
      }
    ]
  },
  "scripts": {
		"vscode:prepublish": "npm run webpack",
    "vscode:prepublish2": "cd client && npm install && cd .. && npm run compile",
    "compile": "tsc -b",
		"compile:client": "tsc -b ./client/tsconfig.json",
		"compile:server": "tsc -b ./server/tsconfig.json",
    "watch": "tsc -b -w",
    "postinstall": "cd client && npm install && cd ../server && npm install && cd ..",
    "test": "sh ./scripts/e2e.sh",
		"webpack": "npm run clean && webpack --mode production --config ./client/webpack.config.js && webpack --mode production --config ./server/webpack.config.js",
		"webpack:dev": "npm run clean && webpack --mode none --config ./client/webpack.config.js && webpack --mode none --config ./server/webpack.config.js",
		"lint": "npm run lint:client && npm run lint:server",
		"lint:client": "eslint --config ./client/.eslintrc.json ./client/src/*.ts",
		"lint:server": "eslint --config ./server/.eslintrc.json ./server/src/*.ts",
		"clean": "rimraf client/out && rimraf server/out"
  },
  "scripts-old": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "test-compile": "tsc -p ./",
    "test-watch": "tsc -watch -p ./",
    "pretest": "npm run test-compile && npm run lint",
    "lint": "eslint src --ext ts"
  },
  "scripts-old2": {
    "vscode:prepublish": "webpack --mode production",
    "webpack": "webpack --mode development",
    "webpack-dev": "webpack --mode development --watch",
    "eslint": "eslint --ext .ts --fix .",
    "eslint-dry-run": "eslint --ext .ts --fix-dry-run .",
    "compile": "tsc -p ./",
    "compile-dry-run": "tsc -p ./ --noEmit --pretty",
    "watch": "tsc -watch -p ./",
    "test": "node ./out/test/runTest.js",
    "initialsetup": "npm i && git submodule init && git submodule update",
    "update2latest": "git pull && git submodule init && git submodule update && npm install --no-save && npm run compile && npm run webpack",
    "package": "vsce package",
    "updatedeps": "npm run compile && node ./out/scripts/updateDeps.js",
    "update-grammar": "node ../node_modules/vscode-grammar-updater/bin JuliaEditorSupport/atom-language-julia grammars/julia_vscode.json ./syntaxes/julia.tmLanguage.json"
  },
  "dependencies": {
    "@traptitech/markdown-it-katex": "",
    "@types/child-process-promise": "",
    "@types/vscode": "",
    "async-child-process": "",
    "async-file": "",
    "await-notify": "",
    "child-process-promise": "",
    "markdown-it-footnote": "",
    "markdown-it": "",
    "promised-temp": "",
    "uuidv4": "",
    "vscode-css-languageservice": "",
    "vscode-debugadapter": "",
    "vscode-html-languageservice": "",
    "vscode-jsonrpc": "",
    "vscode-languageclient": "",
    "vscode-languageserver": "",
    "which": ""
  },
  "devDependencies": {
    "@types/download": "",
    "@types/glob": "",
    "@types/markdown-it": "",
    "@types/mocha": "",
    "@types/node": "",
    "@types/semver": "",
    "@types/vscode": "",
    "@types/which": "",
    "@typescript-eslint/eslint-plugin": "",
    "@typescript-eslint/parser": "",
    "download": "",
    "eslint-config-prettier": "",
    "eslint-plugin-node": "",
    "eslint-plugin-prettier": "",
    "eslint": "",
    "glob": "",
    "merge-options": "",
    "mocha": "",
    "prettier": "",
    "rimraf": "",
    "semver": "",
    "ts-loader": "",
    "typescript": "",
    "vsce": "",
    "vscode-test": "",
    "webpack-cli": "",
    "webpack": ""
  }
}
